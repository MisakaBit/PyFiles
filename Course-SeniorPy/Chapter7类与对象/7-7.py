# coding:utf8
"""
--------------------------------------------------------------------------
    File:   7-7.py
    Auth:   zsdostar
    Date:   2018/1/7 8:00
    Sys:    Windows 10
--------------------------------------------------------------------------
    Desc:   如何在环状数据结构中管理内存
            Python一般是对实例的引用进行计数来管理内存，del那个引用，计数会减一，
            减到0，那个实例就调用析构方法了

            但是呢，如果两个类互相引用，这时候就无法像以上那样回收了
            gc.collect()也不行
            解决方法是在引用的时候，import weakref 用它来弱引用（引用但计数却不会+1）
            a2 = weakref.ref(a1)()
--------------------------------------------------------------------------
"""


class A(object):
    def __del__(self):
        print('delete it!')

a = A()
import sys
print sys.getrefcount(a)  # 这里为什么是2，因为getrefcount也会引用他

del a
